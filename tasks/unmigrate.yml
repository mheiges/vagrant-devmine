# Uninstall plugins and clean database to prepare it for
# migration to another version of Redmine. Preparing
# for Easy Redmine is the target use case.

---

- shell: "find . -mindepth 1 -maxdepth 1 -type d -not -name '*.bak'"
  args:
    chdir: '{{ redmine_root_dir }}/plugins'      
  register: plugins
  changed_when: False

- name: Un-migrating plugins
  command: 'rake redmine:plugins:migrate NAME={{ item }} VERSION=0 RAILS_ENV=production'
  args:
    chdir: '{{ redmine_root_dir }}'      
  register: migration
  with_items:
    - "{{ plugins.stdout_lines | regex_replace('\\./', '') }}"
  sudo: yes
  environment:
    GEM_PATH: '{{ redmine_root_dir }}/vendor/bundle/ruby/1.8'
    PATH: '{{ redmine_root_dir }}/vendor/bundle/ruby/1.8/bin/:/usr/bin'

- name: removing plugins directory
  file: path='{{ redmine_root_dir }}/plugins'
        state=absent
  sudo: yes

- name: adding empty plugins directory
  file: path='{{ redmine_root_dir }}/plugins'
        state=directory
  notify: 'restart nginx'
  sudo: yes

- name: install purge_custom_values task
  copy: src=files/purge_custom_values.rake
        dest='{{ redmine_root_dir }}/lib/tasks/purge_custom_values.rake'
  sudo: yes

  # remove custom_value rows that are orphaned from
  # Projects that were deleted some time in the past.
  # These orphans can interfere with migration to EasyRemine.
- name: removing obsolete custom_values rows
  command: rake redmine:purge_custom_values RAILS_ENV=production
  args:
    chdir: '{{ redmine_root_dir }}'
  sudo: yes
  environment:
    GEM_PATH: '{{ redmine_root_dir }}/vendor/bundle/ruby/1.8'
    PATH: '{{ redmine_root_dir }}/vendor/bundle/ruby/1.8/bin/:/usr/bin'

- name: dumping unmigrated database
  mysql_db: name='{{ redmine_db_name }}'
            state=dump 
            target='{{ redmine_db_unmigrated_dump_outfile }}'
  when: do_dump_unmigrated_redmine_db == True
